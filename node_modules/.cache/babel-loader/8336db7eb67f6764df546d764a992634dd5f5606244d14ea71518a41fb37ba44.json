{"ast":null,"code":"var _jsxFileName = \"/Users/augustus/Desktop/\\u524D\\u7AEF\\u9762\\u8BD5\\u51C6\\u5907/note-manager/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteContent from './components/NoteContent';\nimport Search from './components/Search';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SideBar from './components/SideBar';\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem('notes');\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  // const [currentNote, setCurrentNote] = useState(null);\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isEditing, setIsEditing] = useState(null);\n  const filteredNotes = notes.filter(note => note.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  // console.log(\"filter: \" + filteredNotes);\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = () => {\n    let d = new Date();\n    const noteCount = notes.length + 1;\n    const newNote = {\n      id: uuidv4(),\n      title: `笔记${noteCount}`,\n      content: ``,\n      createTime: d.toLocaleDateString(),\n      updateTime: d.toLocaleDateString()\n    };\n    setNotes([newNote, ...notes]);\n    setIsEditing(newNote.id);\n    return newNote.id;\n  };\n  const deleteNote = id => {\n    const updatedNotes = notes.filter(note => note.id !== id);\n    console.log(\"delete: \" + notes);\n    setNotes(updatedNotes);\n  };\n  const clearNote = () => {\n    setNotes([]);\n  };\n  const updateNoteTitle = (id, title) => {\n    const updatedNotes = notes.map(note => note.id === id ? {\n      ...note,\n      title\n    } : note);\n    setNotes(updatedNotes);\n    setIsEditing(null); // 编辑完成后退出编辑状态\n  };\n  const updateNote = (id, updatedNote) => {\n    const updatedNotes = notes.map(note => note.id === id ? updatedNote : note);\n    // updatedNotes.id = id;\n    console.log(\"NOTE: \" + updatedNotes.id);\n    console.log(\"id\" + id);\n    setNotes(updatedNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caption\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\u6211\\u7684\\u7B14\\u8BB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pageContent\",\n          children: [/*#__PURE__*/_jsxDEV(SideBar, {\n            setSearchQuery: setSearchQuery,\n            notes: filteredNotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"noteDetail\",\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\u8BF7\\u9009\\u62E9\\u4E00\\u4E2A\\u7B14\\u8BB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/note/:id\",\n                element: /*#__PURE__*/_jsxDEV(NoteContent, {\n                  notes: notes,\n                  updateNote: updateNote,\n                  deleteNote: deleteNote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lC4iTmme5uqV4NRoBvA1XOJweZY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","NoteContent","Search","BrowserRouter","Router","Routes","Route","SideBar","useNavigate","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","searchQuery","setSearchQuery","isEditing","setIsEditing","filteredNotes","filter","note","title","toLowerCase","includes","setItem","stringify","addNote","d","Date","noteCount","length","newNote","id","content","createTime","toLocaleDateString","updateTime","deleteNote","updatedNotes","console","log","clearNote","updateNoteTitle","map","updateNote","updatedNote","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/augustus/Desktop/前端面试准备/note-manager/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport NoteContent from './components/NoteContent'\nimport Search from './components/Search';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SideBar from './components/SideBar';\n\nimport { useNavigate } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem('notes');\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  // const [currentNote, setCurrentNote] = useState(null);\n\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isEditing, setIsEditing] = useState(null);\n\n\n  const filteredNotes = notes.filter(note => note.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  // console.log(\"filter: \" + filteredNotes);\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = () => {\n    let d = new Date();\n    const noteCount = notes.length + 1;\n    const newNote = { \n      id: uuidv4(), \n      title: `笔记${noteCount}`, \n      content: `` ,\n      createTime: d.toLocaleDateString(),\n      updateTime: d.toLocaleDateString(), \n    };\n\n    setNotes([newNote, ...notes]);\n    setIsEditing(newNote.id); \n\n    return newNote.id \n\n  };\n\n  const deleteNote = (id) => {\n    const updatedNotes = notes.filter(note => note.id !== id);\n    console.log(\"delete: \" + notes);\n    setNotes(updatedNotes);\n  };\n\n  const clearNote = () => {\n    setNotes([]);\n  }\n\n  const updateNoteTitle = (id, title) => {\n    const updatedNotes = notes.map((note) => (note.id === id ? { ...note, title } : note));\n    setNotes(updatedNotes);\n    setIsEditing(null); // 编辑完成后退出编辑状态\n  };\n\n  const updateNote = (id, updatedNote) => {\n    const updatedNotes = notes.map(note => (note.id === id ? updatedNote : note));\n    // updatedNotes.id = id;\n    console.log(\"NOTE: \" + updatedNotes.id);\n    console.log(\"id\"  + id);\n    setNotes(updatedNotes);\n  };\n\n  return (\n    <Router>\n\n      <div className=\"App\">\n      <div className=\"pageWrap\">\n\n          <div className=\"caption\">\n            <div>\n              我的笔记\n            </div>\n          </div>\n          <div className='pageContent'>\n          <SideBar  setSearchQuery={setSearchQuery}\n                    notes={filteredNotes} \n                    />\n\n            {/* <div className=\"sidebar\">\n            <Search setSearchQuery={setSearchQuery} />\n            <NoteList notes={filteredNotes} \n                      isEditing={isEditing} \n                      setIsEditing={setIsEditing} \n                      updateNoteTitle={updateNoteTitle}\n                      addNote={addNote}/>\n            </div> */}\n\n\n            <div className=\"noteDetail\">\n            <Routes>\n              <Route path=\"/\" element={<div>请选择一个笔记</div>} />\n              <Route path=\"/note/:id\" element={<NoteContent notes={notes} updateNote={updateNote} deleteNote={deleteNote}/>} />\n            </Routes>\n            </div>\n          </div>\n\n      </div>\n    </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}