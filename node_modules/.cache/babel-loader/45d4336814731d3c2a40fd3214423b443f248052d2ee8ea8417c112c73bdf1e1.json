{"ast":null,"code":"var _jsxFileName = \"/Users/augustus/Desktop/\\u524D\\u7AEF\\u9762\\u8BD5\\u51C6\\u5907/note-manager/src/components/NoteContent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteContent = ({\n  notes,\n  updateNote\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [note, setNote] = useState(null);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    const foundNote = notes.find(n => n.id === id);\n    console.log(\"Found id: \" + foundNote.id);\n    console.log(\"Found:\" + foundNote.content);\n    if (foundNote) {\n      setNote(foundNote);\n      setTitle(foundNote.title);\n      setContent(foundNote.content);\n    }\n  }, [id, notes]);\n  useEffect(() => {\n    if (isSaving) {\n      const timeoutId = setTimeout(() => {\n        updateNote(id, {\n          id,\n          title,\n          content\n        });\n        setIsSaving(false);\n        console.log(notes);\n      }, 1000);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isSaving, id, title, content, updateNote]);\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n    setNote({\n      ...note,\n      title: e.target.value\n    });\n    setIsSaving(true);\n  };\n  const handleContentChange = e => {\n    setContent(e.target.value);\n    setIsSaving(true);\n  };\n\n  // const handleSave = () => {\n  //     updateNote(id, { ...note, title, content });\n  //     navigate('/');\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title\n      // onChange={(e) => setTitle(e.target.value)}\n      ,\n      onChange: handleTitleChange,\n      className: \"noteCaption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: content\n      // onChange={(e) => setContent(e.target.value)}\n      ,\n      onChange: handleContentChange,\n      className: \"noteContent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteContent, \"4ShLeyCrU/iylTfl1FvKHbc9HI8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NoteContent;\nexport default NoteContent;\nvar _c;\n$RefreshReg$(_c, \"NoteContent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","jsxDEV","_jsxDEV","NoteContent","notes","updateNote","_s","id","navigate","note","setNote","title","setTitle","content","setContent","isSaving","setIsSaving","foundNote","find","n","console","log","timeoutId","setTimeout","clearTimeout","handleTitleChange","e","target","value","handleContentChange","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/augustus/Desktop/前端面试准备/note-manager/src/components/NoteContent.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst NoteContent = ({ notes, updateNote }) => {\n    const { id } = useParams();\n\n    const navigate = useNavigate();\n    const [note, setNote] = useState(null);\n\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n\n    useEffect(() => {\n        const foundNote = notes.find(n => n.id === id);\n        console.log(\"Found id: \" + foundNote.id);\n        console.log(\"Found:\" + foundNote.content);\n        if (foundNote) {\n            setNote(foundNote);\n            setTitle(foundNote.title);\n            setContent(foundNote.content);\n        }\n    }, [id, notes]);\n\n    useEffect(() => {\n        if (isSaving) {\n            const timeoutId = setTimeout(() => {\n                updateNote(id, { id, title, content });\n                setIsSaving(false);\n                console.log(notes);\n            }, 1000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [isSaving, id, title, content, updateNote]);\n\n\n    const handleTitleChange = (e) => {\n        setTitle(e.target.value);\n        setNote({\n            ...note,\n            title: e.target.value,\n          });\n        setIsSaving(true);\n    };\n\n    const handleContentChange = (e) => {\n        setContent(e.target.value);\n        setIsSaving(true);\n    };\n\n\n    // const handleSave = () => {\n    //     updateNote(id, { ...note, title, content });\n    //     navigate('/');\n    // };\n\n    return (\n        <div className=\"note-content\">\n        <input\n            type=\"text\"\n            value={title}\n            // onChange={(e) => setTitle(e.target.value)}\n            onChange={handleTitleChange}\n            className=\"noteCaption\"\n        />\n\n\n        <textarea\n            value={content}\n            // onChange={(e) => setContent(e.target.value)}\n            onChange={handleContentChange}\n            className=\"noteContent\"\n        />\n        {/* <button onClick={handleSave}>保存</button>\n        <button onClick={() => navigate('/')}>取消</button> */}\n        </div>\n    );\n    };\n\nexport default NoteContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}