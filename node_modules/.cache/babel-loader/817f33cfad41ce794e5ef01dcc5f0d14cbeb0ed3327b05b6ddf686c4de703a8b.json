{"ast":null,"code":"var _jsxFileName = \"/Users/augustus/Desktop/\\u524D\\u7AEF\\u9762\\u8BD5\\u51C6\\u5907/note-manager/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport Button from '@mui/material/Button';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem('notes');\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  const [currentNote, setCurrentNote] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isEditing, setIsEditing] = useState(null);\n\n  // const filteredNotes = notes.filter(note => note.title.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  const addNote = () => {\n    const noteCount = notes.length + 1;\n    const newNote = {\n      id: uuidv4(),\n      title: `笔记${noteCount}`\n    };\n    setNotes([newNote, ...notes]);\n    setIsEditing(newNote.id);\n    console.log(notes);\n  };\n  const clearNote = () => {\n    setNotes([]);\n  };\n  const updateNoteTitle = (id, title) => {\n    const updatedNotes = notes.map(note => note.id === id ? {\n      ...note,\n      title\n    } : note);\n    setNotes(updatedNotes);\n    setIsEditing(null); // 编辑完成后退出编辑状态\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UxM8YnwZdB8y9n9pQkw2a8sroq8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","NoteList","Button","BrowserRouter","Router","Route","Switch","Link","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","currentNote","setCurrentNote","searchQuery","setSearchQuery","isEditing","setIsEditing","setItem","stringify","addNote","noteCount","length","newNote","id","title","console","log","clearNote","updateNoteTitle","updatedNotes","map","note","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/augustus/Desktop/前端面试准备/note-manager/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteList from './components/NoteList';\nimport Button from '@mui/material/Button';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n  const [notes, setNotes] = useState(() => {\n    const savedNotes = localStorage.getItem('notes');\n    return savedNotes ? JSON.parse(savedNotes) : [];\n  });\n  const [currentNote, setCurrentNote] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isEditing, setIsEditing] = useState(null);\n\n  // const filteredNotes = notes.filter(note => note.title.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = () => {\n    const noteCount = notes.length + 1;\n    const newNote = { id: uuidv4(), title: `笔记${noteCount}` };\n    setNotes([newNote, ...notes]);\n    setIsEditing(newNote.id); \n    console.log(notes);\n  };\n\n  const clearNote = () => {\n    setNotes([]);\n  }\n\n  const updateNoteTitle = (id, title) => {\n    const updatedNotes = notes.map((note) => (note.id === id ? { ...note, title } : note));\n    setNotes(updatedNotes);\n    setIsEditing(null); // 编辑完成后退出编辑状态\n  };\n\n  return (\n    <Router>\n    </Router>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,MAAM;IACvC,MAAMiB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;EACF,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;;EAEhD;;EAEAC,SAAS,CAAC,MAAM;IACdiB,YAAY,CAACU,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACd,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMe,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,SAAS,GAAGhB,KAAK,CAACiB,MAAM,GAAG,CAAC;IAClC,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAExB,MAAM,CAAC,CAAC;MAAEyB,KAAK,EAAE,KAAKJ,SAAS;IAAG,CAAC;IACzDf,QAAQ,CAAC,CAACiB,OAAO,EAAE,GAAGlB,KAAK,CAAC,CAAC;IAC7BY,YAAY,CAACM,OAAO,CAACC,EAAE,CAAC;IACxBE,OAAO,CAACC,GAAG,CAACtB,KAAK,CAAC;EACpB,CAAC;EAED,MAAMuB,SAAS,GAAGA,CAAA,KAAM;IACtBtB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMuB,eAAe,GAAGA,CAACL,EAAE,EAAEC,KAAK,KAAK;IACrC,MAAMK,YAAY,GAAGzB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,IAAI;MAAEP;IAAM,CAAC,GAAGO,IAAK,CAAC;IACtF1B,QAAQ,CAACwB,YAAY,CAAC;IACtBb,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEf,OAAA,CAACP,MAAM;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGb;AAAChC,EAAA,CAtCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}